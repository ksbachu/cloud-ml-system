name: ML Model Deployment with SageMaker

on:
  push:
    branches:
      - main
      - feature/*
  workflow_dispatch:

env:
  TF_DIR: terraform
  TF_VAR_bucket_name: ${{ secrets.S3_BUCKET_NAME }}
  TF_VAR_sagemaker_endpoint: ${{ secrets.SAGEMAKER_ENDPOINT }}

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      train: ${{ steps.filter.outputs.train }}
      smoke: ${{ steps.filter.outputs.smoke }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Detect file changes with dorny/paths-filter
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            train:
              - 'model/train_model.py'
              - 'terraform/**'
            smoke:
              - 'test/smoke_test_inference.py'

  deploy:
    needs: detect-changes
    runs-on: ubuntu-latest
    env:
      S3_BUCKET: ${{ secrets.S3_BUCKET_NAME }}
      SAGEMAKER_EXECUTION_ROLE_ARN: ${{ secrets.SAGEMAKER_EXECUTION_ROLE_ARN }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      SAGEMAKER_ENDPOINT_NAME: ${{ secrets.SAGEMAKER_ENDPOINT }}
      TF_VAR_sagemaker_endpoint: ${{ secrets.SAGEMAKER_ENDPOINT }}
      API_GATEWAY_URL: ${{ secrets.API_GATEWAY_URL }}
    environment: ml-sagemaker-deploy

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Python Dependencies
        run: |
          pip install -r requirements.txt

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.6

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Terraform Init with S3 Backend
        working-directory: ${{ env.TF_DIR }}
        run: terraform init -reconfigure

      - name: Conditionally Train and Deploy Model
        if: needs.detect-changes.outputs.train == 'true'
        run: |
          echo "Training and uploading new model..."
          python model/train_model.py

      - name: Get Latest Model from S3
        run: |
          BUCKET_NAME=${{ secrets.S3_BUCKET_NAME }}
          PREFIX=models/

          # List all model.tar.gz files recursively, sort by LastModified, get the latest
          latest_model=$(aws s3api list-objects-v2 \
            --bucket "$BUCKET_NAME" \
            --prefix "$PREFIX" \
            --query 'sort_by(Contents, &LastModified)[?ends_with(Key, `model.tar.gz`)] | [-1].Key' \
            --output text)

          if [ -z "$latest_model" ]; then
            echo "ERROR: No model.tar.gz file found in S3 under $PREFIX"
            exit 1
          fi

          echo "Found latest model file: $latest_model"

          # Extract version from folder name e.g., xgboostmodel_20250630093229
          version_suffix=$(echo "$latest_model" | grep -oP 'xgboostmodel_\d{14}' | grep -oP '\d{14}')

          if [ -z "$version_suffix" ]; then
            echo "ERROR: Could not extract version suffix from model path: $latest_model"
            exit 1
          fi

          echo "Extracted version suffix: $version_suffix"

          echo "TF_VAR_model_data_url=s3://$BUCKET_NAME/$latest_model" >> $GITHUB_ENV
          echo "TF_VAR_model_version_suffix=${version_suffix}" >> $GITHUB_ENV
          echo "endpoint_name=xgboostmodel-endpoint-${version_suffix}" >> $GITHUB_ENV


      - name: Deploy Terraform
        working-directory: ${{ env.TF_DIR }}
        run: |
          echo "Packaging Lambda function with dependencies"
          mkdir -p ../build
          pip install -r ../lambda/requirements.txt -t ../build/
          cp ../lambda/inference_lambda.py ../build/
          cd ../build
          zip -r ../lambda_package.zip .
          mv ../lambda_package.zip ../terraform/
          cd ../terraform

          echo "Model path: $TF_VAR_model_data_url"
          echo "Version suffix: $TF_VAR_model_version_suffix"
          export TF_VAR_sagemaker_endpoint_name=$endpoint_name
          terraform apply -auto-approve




      - name: Conditionally Load Test SageMaker Endpoint
        run: |
          echo "Running load test"
          python test/load_test_sagemaker.py

      - name: Conditionally Run Inference Smoke Test
        if: needs.detect-changes.outputs.smoke == 'true'
        run: |
          echo "Running smoke test due to changes in smoke_test_inference.py"
          python test/smoke_test_inference.py
